// Autogenerated, edition is futile
package com.heeere.omiscidgui.eaa.adapterframework.model;

public class ExpectedRequirementAutoLink {

    protected java.beans.PropertyChangeSupport ___pcs = new java.beans.PropertyChangeSupport(this);
    public void addPropertyChangeListener(java.beans.PropertyChangeListener l) {___pcs.addPropertyChangeListener(l);}
    public void removePropertyChangeListener(java.beans.PropertyChangeListener l) {___pcs.removePropertyChangeListener(l);}
    public ExpectedRequirementAutoLink(ProvidedSlot from) {
        this.from = from;
    }

    private ProvidedSlot from;
    public ProvidedSlot getFrom() {
        return from;
    }
    public void setFrom(ProvidedSlot from) {
        ProvidedSlot __old = this.from;
        this.from = from;
        ___pcs.firePropertyChange("from", __old, this.from);
    }

    public String deepToString(String indent, String delta, int maxDepth) {
        if (maxDepth <= 0) { return "!!!MAX!!!\n";}
        StringBuilder res = new StringBuilder();
        String nextIndent = indent + delta;
        String nextNextIndent = nextIndent + delta;
        res.append("ExpectedRequirementAutoLink {\n");
        res.append(nextIndent).append("from: ");
        if (null == from) {
            res.append("null\n");
        } else {
            res.append(from.deepToString(nextIndent, delta, maxDepth-1));
        }
        res.append(indent).append("} // ExpectedRequirementAutoLink\n");
        return res.toString();
    }

    public ExpectedRequirementAutoLink smartDeepCopy() {
        java.util.HashMap<Object,Object> conversion = new java.util.HashMap<Object,Object>();
        return smartDeepCopyInto(conversion);
    }
    /*package*/ ExpectedRequirementAutoLink smartDeepCopyInto(java.util.HashMap<Object,Object> conversion) {
        if (conversion.containsKey(this)) return (ExpectedRequirementAutoLink) conversion.get(this);
        ExpectedRequirementAutoLink ___res = new ExpectedRequirementAutoLink();
        conversion.put(this, ___res);
        if (null == from) {
            ___res.from = null;
        } else {
            ___res.from = from.smartDeepCopyInto(conversion);
        }
        return ___res;
    }
    /*package*/ ExpectedRequirementAutoLink() {
        this.from = null;
    }

}
