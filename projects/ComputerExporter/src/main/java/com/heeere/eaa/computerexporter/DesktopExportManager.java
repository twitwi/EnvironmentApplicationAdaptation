/**
 *
 * Software written by Remi Emonet.
 *
 */
package com.heeere.eaa.computerexporter;

import java.util.HashMap;
import java.util.Map;
import javax.swing.Action;
import javax.swing.ButtonModel;
import javax.swing.JButton;

public class DesktopExportManager extends javax.swing.JPanel {

    private Runnable addExportDisplay;

    public void setAddExportDisplay(Runnable addExportDisplay) {
        this.addExportDisplay = addExportDisplay;
    }

    /**
     * Creates new form DesktopExportManager
     */
    public DesktopExportManager() {
        initComponents();
        chatUserNameTextField.setText(System.getProperty("user.name"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        exportDisplayPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        displayDimensionTextField = new javax.swing.JFormattedTextField();
        jButton1 = new javax.swing.JButton();
        displayExportDisplayCheckbox = new javax.swing.JCheckBox();
        displayExportMouseCheckbox = new javax.swing.JCheckBox();
        startedDisplayExporterPanel = new javax.swing.JPanel();
        exportOthersPanel = new javax.swing.JPanel();
        displayExportText2SpeechCheckbox = new javax.swing.JCheckBox();
        exportSlidePresenterCheckbox = new javax.swing.JCheckBox();
        exportChatCheckbox = new javax.swing.JCheckBox();
        chatUserNameTextField = new javax.swing.JTextField();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.PAGE_AXIS));

        exportDisplayPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Export Display"));

        jLabel1.setText("Dimension");

        displayDimensionTextField.setText("800x600");
        displayDimensionTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayDimensionTextFieldActionPerformed(evt);
            }
        });

        jButton1.setText("+");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        displayExportDisplayCheckbox.setSelected(true);
        displayExportDisplayCheckbox.setText("export display");

        displayExportMouseCheckbox.setSelected(true);
        displayExportMouseCheckbox.setText("export mouse");

        startedDisplayExporterPanel.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createTitledBorder("Currently Exported"), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        startedDisplayExporterPanel.setLayout(new javax.swing.BoxLayout(startedDisplayExporterPanel, javax.swing.BoxLayout.PAGE_AXIS));

        javax.swing.GroupLayout exportDisplayPanelLayout = new javax.swing.GroupLayout(exportDisplayPanel);
        exportDisplayPanel.setLayout(exportDisplayPanelLayout);
        exportDisplayPanelLayout.setHorizontalGroup(
            exportDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(exportDisplayPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(exportDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(startedDisplayExporterPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE)
                    .addGroup(exportDisplayPanelLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(displayExportDisplayCheckbox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(displayExportMouseCheckbox, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE))
                    .addGroup(exportDisplayPanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(displayDimensionTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        exportDisplayPanelLayout.setVerticalGroup(
            exportDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(exportDisplayPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(exportDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(displayDimensionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(exportDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(displayExportDisplayCheckbox)
                    .addComponent(displayExportMouseCheckbox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(startedDisplayExporterPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                .addContainerGap())
        );

        add(exportDisplayPanel);

        exportOthersPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Others"));

        displayExportText2SpeechCheckbox.setText("export text2speech");

        exportSlidePresenterCheckbox.setText("export slide presenter");

        exportChatCheckbox.setText("export chat service");

        chatUserNameTextField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        chatUserNameTextField.setText("jTextField1");
        chatUserNameTextField.setToolTipText("Alias In Chats");

        javax.swing.GroupLayout exportOthersPanelLayout = new javax.swing.GroupLayout(exportOthersPanel);
        exportOthersPanel.setLayout(exportOthersPanelLayout);
        exportOthersPanelLayout.setHorizontalGroup(
            exportOthersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(exportOthersPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(exportOthersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(displayExportText2SpeechCheckbox)
                    .addComponent(exportSlidePresenterCheckbox)
                    .addGroup(exportOthersPanelLayout.createSequentialGroup()
                        .addComponent(exportChatCheckbox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chatUserNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)))
                .addContainerGap())
        );
        exportOthersPanelLayout.setVerticalGroup(
            exportOthersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(exportOthersPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(displayExportText2SpeechCheckbox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(exportSlidePresenterCheckbox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(exportOthersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exportChatCheckbox)
                    .addComponent(chatUserNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        add(exportOthersPanel);
    }// </editor-fold>//GEN-END:initComponents

    private void displayDimensionTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayDimensionTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_displayDimensionTextFieldActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (addExportDisplay != null) {
            addExportDisplay.run();
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField chatUserNameTextField;
    private javax.swing.JFormattedTextField displayDimensionTextField;
    private javax.swing.JCheckBox displayExportDisplayCheckbox;
    private javax.swing.JCheckBox displayExportMouseCheckbox;
    private javax.swing.JCheckBox displayExportText2SpeechCheckbox;
    private javax.swing.JCheckBox exportChatCheckbox;
    private javax.swing.JPanel exportDisplayPanel;
    private javax.swing.JPanel exportOthersPanel;
    private javax.swing.JCheckBox exportSlidePresenterCheckbox;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel startedDisplayExporterPanel;
    // End of variables declaration//GEN-END:variables

    int getExportDisplayWidth() {
        return Integer.parseInt(displayDimensionTextField.getText().split("x")[0]);
    }

    int getExportDisplayHeight() {
        return Integer.parseInt(displayDimensionTextField.getText().split("x")[1]);
    }

    boolean getExportDisplay() {
        return displayExportDisplayCheckbox.isSelected();
    }

    boolean getExportMouse() {
        return displayExportMouseCheckbox.isSelected();
    }

    void setExportSpeechEnabled(boolean enabled, String cause) {
        displayExportText2SpeechCheckbox.setEnabled(enabled);
        displayExportText2SpeechCheckbox.setToolTipText(cause);
    }

    ButtonModel getExportSpeechModel() {
        return displayExportText2SpeechCheckbox.getModel();
    }

    void setExportPresenterEnabled(boolean enabled, String cause) {
        exportSlidePresenterCheckbox.setEnabled(enabled);
        exportSlidePresenterCheckbox.setToolTipText(cause);
    }

    ButtonModel getExportPresenterModel() {
        return exportSlidePresenterCheckbox.getModel();
    }

    void setExportChatEnabled(boolean enabled, String cause) {
        exportChatCheckbox.setEnabled(enabled);
        exportChatCheckbox.setToolTipText(cause);
        chatUserNameTextField.setEnabled(enabled & !exportChatCheckbox.isSelected());
    }

    ButtonModel getExportChatModel() {
        return exportChatCheckbox.getModel();
    }

    String getChatAlias() {
        return chatUserNameTextField.getText();
    }
    Map<Action, JButton> buttons = new HashMap<Action, JButton>();

    void addDisplayAction(Action kill) {
        buttons.put(kill, new JButton(kill));
        startedDisplayExporterPanel.add(buttons.get(kill));
        startedDisplayExporterPanel.revalidate();
    }

    void removeDisplayAction(Action kill) {
        startedDisplayExporterPanel.remove(buttons.remove(kill));
        startedDisplayExporterPanel.revalidate();
    }
}
